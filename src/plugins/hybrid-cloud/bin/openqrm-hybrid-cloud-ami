#!/bin/bash
#
# openQRM Enterprise developed by openQRM Enterprise GmbH.
#
# All source code and content (c) Copyright 2014, openQRM Enterprise GmbH unless specifically noted otherwise.
#
# This source code is released under the GNU General Public License version 2, unless otherwise agreed with openQRM Enterprise GmbH.
# The latest version of this license can be found here: src/doc/LICENSE.txt
#
# By using this software, you acknowledge having read this license and agree to be bound thereby.
#
#           http://openqrm-enterprise.com
#
# Copyright 2014, openQRM Enterprise GmbH <info@openqrm-enterprise.com>
#

# this script automatically manages hybrid-cloud images
OPENQRM_SERVER_BASE_DIR=$(dirname $0)/../../../..
OPENQRM_SERVER_BASE_DIR=$(pushd $OPENQRM_SERVER_BASE_DIR > /dev/null && echo $PWD && popd > /dev/null)
. $OPENQRM_SERVER_BASE_DIR/openqrm/include/openqrm-functions
# unblock starting command queue early for non-blocking + ui commands
# only blockign commands
export OPENQRM_SOURCE_DIR="$OPENQRM_SERVER_BASE_DIR/openqrm/"
. $OPENQRM_SERVER_BASE_DIR/openqrm/include/openqrm-package-functions
. $OPENQRM_SERVER_BASE_DIR/openqrm/plugins/hybrid-cloud/include/openqrm-plugin-hybrid-cloud-functions
. $OPENQRM_SERVER_BASE_DIR/openqrm/plugins/hybrid-cloud/etc/openqrm-plugin-hybrid-cloud.conf
# get the ip config
. $OPENQRM_SERVER_BASE_DIR/openqrm/etc/openqrm-server.conf
. $OPENQRM_SERVER_BASE_DIR/openqrm/include/openqrm-server-functions
openqrm_server_get_config
export LANG=C
export resource_openqrmserver=$OPENQRM_SERVER_IP_ADDRESS
# stat dir
HYBRID_CLOUD_STAT_DIR="$OPENQRM_SERVER_BASE_DIR/openqrm/plugins/hybrid-cloud/web/hybrid-cloud-stat/"

if [ "$OPENQRM_CUSTOM_JAVA_HOME" != "" ]; then
	export JAVA_HOME=$OPENQRM_CUSTOM_JAVA_HOME
	export PATH=$JAVA_HOME/bin:$PATH
fi
if [ "$OPENQRM_CUSTOM_EC2_API_HOME" != "" ]; then
	export EC2_HOME=$OPENQRM_CUSTOM_EC2_API_HOME
	export PATH=$OPENQRM_CUSTOM_EC2_API_HOME/bin:$PATH
fi
if [ "$OPENQRM_CUSTOM_EC2_AMI_HOME" != "" ]; then
	export EC2_AMITOOL_HOME=$OPENQRM_CUSTOM_EC2_AMI_HOME
	export EC2_AMI_HOME=$OPENQRM_CUSTOM_EC2_AMI_HOME
	export PATH=$OPENQRM_CUSTOM_EC2_AMI_HOME/bin:$PATH
fi

# let only root run this script
WHOAMI=`whoami`
if [ "$WHOAMI" != "root" ]; then
	echo "ERROR: Please run this script as root!"
	exit 6
fi

# check deps
if ! check_hybrid_cloud_deps; then
	if [ "$NON_BLOCKING" != "true" ]; then
		openqrm_unblock_starting_queue $@
	fi
	exit 1
fi
# create stat dir
if [ ! -d "$HYBRID_CLOUD_STAT_DIR" ]; then
	mkdir -p $HYBRID_CLOUD_STAT_DIR
	chmod -R 777 $HYBRID_CLOUD_STAT_DIR
fi


function hybrid_cloud_usage() {
	echo "Usage : $0 describe_images <-n account-name> <-i account-id> <-O access_key> <-W secret_key> <-t aws/euca> [-f filter] [-ar region] [-ap public/private]"
	echo "        $0 describe_images <-n account-name> <-u username> <-p passsword> <-q host-ip> <-x portnumber> <-e endpoint> <-g tenant-name> <-t lc-openstack>"
	echo ""
	echo "Optional parameters:"
	echo "             [--openqrm-ui-user <username>]"
	echo "             [--openqrm-internal-cmd <true/false>]"
	echo "             [--openqrm-cmd-mode <regular/background/fork>]"
	exit 1
}

# debugging
# exec 2>> /var/log/ec2-commands.log
# set -x


FULL_COMMANDLINE="$0 $@"
HYBRID_CLOUD_COMMAND=$1
shift

while [ $# -ne 0 ]; do
	case "$1" in
		-i)
			PARAM_HYBRID_CLOUD_ACCOUNT_ID=$2
			shift
			;;
		-n)
			PARAM_HYBRID_CLOUD_ACCOUNT_NAME=$2
			shift
			;;
		-t)
			PARAM_HYBRID_CLOUD_ACCOUNT_TYPE=$2
			shift
			;;
		-O)
			PARAM_HYBRID_CLOUD_ACCESS_KEY=$2
			shift
			;;
		-W)
			PARAM_HYBRID_CLOUD_SECRET_KEY=$2
			shift
			;;
		-u)
			PARAM_HYBRID_CLOUD_USERNAME=$2
			shift
			;;
		-p)
			PARAM_HYBRID_CLOUD_PASSWORD=$2
			shift
			;;
		-q)
			PARAM_HYBRID_CLOUD_HOST=$2
			shift
			;;
		-x)
			PARAM_HYBRID_CLOUD_PORT=$2
			shift
			;;
		-e)
			PARAM_HYBRID_CLOUD_ENDPOINT=$2
			shift
			;;
		-g)
			PARAM_HYBRID_CLOUD_TENANT=$2
			shift
			;;
		-f)
			PARAM_AMI_LIST_FILTER=$2
			shift
			;;
		-ap)
			PARAM_AMI_PERMISSIONS=$2
			shift
			;;
		-ar)
			PARAM_AMI_REGION=$2
			shift
			;;
		--openqrm-ui-user)
			OPENQRM_UI_USER=$2
			shift
			;;
		--openqrm-internal-cmd)
			OPENQRM_INTERNAL_CMD=$2
			shift
			;;
		--openqrm-cmd-mode)
			OPENQRM_CMD_MODE=$2
			shift
			;;

		*)
			if [ "$NON_BLOCKING" != "true" ]; then
				openqrm_unblock_starting_queue $FULL_COMMANDLINE
			fi
			echo "ERROR: Free commandline arguments are not allowed"
			hybrid_cloud_usage
			exit 6
			;;
	esac
	shift
done

# checks
if [ "$HYBRID_CLOUD_COMMAND" == "" ]; then
	openqrm_unblock_starting_queue $FULL_COMMANDLINE
	hybrid_cloud_usage
fi
if [ "$PARAM_HYBRID_CLOUD_ACCOUNT_ID" == "" ] && [ "$PARAM_HYBRID_CLOUD_ACCOUNT_TYPE" == "" ] || [ "$PARAM_HYBRID_CLOUD_ACCOUNT_NAME" == "" ]; then
	if [ "$NON_BLOCKING" != "true" ]; then
		openqrm_unblock_starting_queue $FULL_COMMANDLINE
	fi
	hybrid_cloud_usage
fi

# map the cloud types to the utils names
case "$PARAM_HYBRID_CLOUD_ACCOUNT_TYPE" in
	aws)
		. $OPENQRM_SERVER_BASE_DIR/openqrm/plugins/hybrid-cloud/etc/commands/aws.conf
		check_hybrid_cloud_deps_ec2
		if [ "$PARAM_HYBRID_CLOUD_ACCESS_KEY" == "" ] || [ "$PARAM_HYBRID_CLOUD_SECRET_KEY" == "" ]; then
			if [ "$NON_BLOCKING" != "true" ]; then
				openqrm_unblock_starting_queue $FULL_COMMANDLINE
			fi
			hybrid_cloud_usage
		fi
		HYBRID_CLOUD_ACCOUNT="-O $PARAM_HYBRID_CLOUD_ACCESS_KEY -W $PARAM_HYBRID_CLOUD_SECRET_KEY"
		;;
	euca)
		. $OPENQRM_SERVER_BASE_DIR/openqrm/plugins/hybrid-cloud/etc/commands/euca.conf
		check_hybrid_cloud_deps_euca
		if [ "$PARAM_HYBRID_CLOUD_ACCESS_KEY" == "" ] || [ "$PARAM_HYBRID_CLOUD_SECRET_KEY" == "" ]; then
			if [ "$NON_BLOCKING" != "true" ]; then
				openqrm_unblock_starting_queue $FULL_COMMANDLINE
			fi
			hybrid_cloud_usage
		fi
		HYBRID_CLOUD_ACCOUNT="-O $PARAM_HYBRID_CLOUD_ACCESS_KEY -W $PARAM_HYBRID_CLOUD_SECRET_KEY"
		;;
	lc-openstack)
		. $OPENQRM_SERVER_BASE_DIR/openqrm/plugins/hybrid-cloud/etc/commands/lc-openstack.conf
		if [ "$PARAM_HYBRID_CLOUD_ACCOUNT_NAME" == "" ] || [ "$PARAM_HYBRID_CLOUD_USERNAME" == "" ] || [ "$PARAM_HYBRID_CLOUD_PASSWORD" == "" ] || [ "$PARAM_HYBRID_CLOUD_HOST" == "" ] || [ "$PARAM_HYBRID_CLOUD_PORT" == "" ] || [ "$PARAM_HYBRID_CLOUD_ENDPOINT" == "" ] || [ "$PARAM_HYBRID_CLOUD_TENANT" == "" ]; then
			if [ "$NON_BLOCKING" != "true" ]; then
				openqrm_unblock_starting_queue $FULL_COMMANDLINE
			fi
			hybrid_cloud_usage
		fi
		HYBRID_CLOUD_ACCOUNT="--provider OPENSTACK --username $PARAM_HYBRID_CLOUD_USERNAME --password $PARAM_HYBRID_CLOUD_PASSWORD --host $PARAM_HYBRID_CLOUD_HOST --port $PARAM_HYBRID_CLOUD_PORT --endpoint $PARAM_HYBRID_CLOUD_ENDPOINT --tenant $PARAM_HYBRID_CLOUD_TENANT"
		;;
esac

# set region
if [ "$PARAM_AMI_REGION" != "" ]; then
	PARAM_AMI_REGION_PARAMETER=" --region $PARAM_AMI_REGION"
fi

if [ "$OPENQRM_UI_USER" != "" ]; then
	OPENQRM_UI_USER_PARAMETER=" --openqrm-ui-user $OPENQRM_UI_USER"
fi

# main
case "$HYBRID_CLOUD_COMMAND" in
	describe_images)
		if [ "$PARAM_HYBRID_CLOUD_ACCOUNT_TYPE" == "aws" ] || [ "$PARAM_HYBRID_CLOUD_ACCOUNT_TYPE" == "euca" ]; then
			if [ "$PARAM_AMI_LIST_FILTER" != "" ]; then
				PARAM_AMI_LIST_FILTER_PARAMETER=" -F name=${PARAM_AMI_LIST_FILTER}*"
			fi
			if [ "$PARAM_AMI_PERMISSIONS" == "" ]; then
				PARAM_AMI_PERMISSIONS="public"
			fi
			if [ "$PARAM_AMI_PERMISSIONS" == "public" ]; then
				PARAM_AMI_PERMISSIONS_FILTER="-x all"
			elif [ "$PARAM_AMI_PERMISSIONS" == "private" ]; then
				PARAM_AMI_PERMISSIONS_FILTER="-o self"
				PARAM_AMI_LIST_FILTER_PARAMETER=""
			fi
		fi
		if [ "$PARAM_HYBRID_CLOUD_ACCOUNT_TYPE" == "lc-openstack" ]; then
			if [ "$PARAM_AMI_LIST_FILTER" != "" ]; then
				PARAM_AMI_LIST_FILTER_PARAMETER=" --filter ${PARAM_AMI_LIST_FILTER}"
			fi
		fi

		LOCK_TIME=`openqrm_lock_queue aquire hybrid-cloud`
		trap "openqrm_lock_queue release hybrid-cloud $LOCK_TIME" EXIT
		openqrm_unblock_starting_queue $FULL_COMMANDLINE

		$DESCRIBE_IMAGES $HYBRID_CLOUD_ACCOUNT $PARAM_AMI_PERMISSIONS_FILTER $PARAM_AMI_LIST_FILTER_PARAMETER $PARAM_AMI_REGION_PARAMETER | grep ^IMAGE > $HYBRID_CLOUD_STAT_DIR/$PARAM_HYBRID_CLOUD_ACCOUNT_ID.describe_images.log.tmp &
		hybrid_cloud_wait_for_timeout $! $OPENQRM_PLUGIN_HYBRID_CLOUD_REQUEST_TIMEOUT
		HYBRID_CLOUD_RET=$?
		if [ "$HYBRID_CLOUD_RET" != 0 ]; then
			openqrm_post_event 0 "describe_images" 3 "openqrm-hybrid-cloud-ami" "Could not list cloud images for account $PARAM_HYBRID_CLOUD_ACCOUNT_NAME!"
		else
			sed -i -e "s/\x09/@/g" $HYBRID_CLOUD_STAT_DIR/$PARAM_HYBRID_CLOUD_ACCOUNT_ID.describe_images.log.tmp
			sed -i -e "s/\x20/@/g" $HYBRID_CLOUD_STAT_DIR/$PARAM_HYBRID_CLOUD_ACCOUNT_ID.describe_images.log.tmp
			chmod -R 777 $HYBRID_CLOUD_STAT_DIR/$PARAM_HYBRID_CLOUD_ACCOUNT_ID.describe_images.log.tmp
			mv -f $HYBRID_CLOUD_STAT_DIR/$PARAM_HYBRID_CLOUD_ACCOUNT_ID.describe_images.log.tmp $HYBRID_CLOUD_STAT_DIR/$PARAM_HYBRID_CLOUD_ACCOUNT_ID.describe_images.log
		fi

		openqrm_lock_queue release hybrid-cloud $LOCK_TIME
		trap '' EXIT
		;;


	*)
		openqrm_unblock_starting_queue $FULL_COMMANDLINE
		hybrid_cloud_usage
		;;


esac

